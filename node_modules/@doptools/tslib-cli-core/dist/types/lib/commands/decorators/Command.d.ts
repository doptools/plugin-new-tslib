import { AlphabetLowercase, AlphabetUppercase } from '@oclif/parser/lib/alphabet';
import { Default } from '@oclif/parser/lib/flags';
export interface ICliCommandDescription {
    id?: string;
    hidden?: boolean;
    aliases?: string[];
    description?: string;
    usage?: string | string[];
    examples?: string[];
}
export declare function CliCommand(desc: ICliCommandDescription): ClassDecorator;
export interface IArgumentConfig {
    name?: string;
    description?: string;
    required?: boolean;
    hidden?: boolean;
    default?: string;
    options?: string[];
    parse?: (input: string) => string | number | undefined;
}
export declare function Argument(): PropertyDecorator;
export declare function Argument(desc: IArgumentConfig): PropertyDecorator;
export declare function Argument(required: boolean): PropertyDecorator;
export declare function Argument(name: string): PropertyDecorator;
export declare function Argument(name: string, required: boolean): PropertyDecorator;
export interface IFlagConfig<TFlag, TInput> {
    name?: string;
    char?: AlphabetLowercase | AlphabetUppercase;
    description?: string;
    helpLabel?: string;
    hidden?: boolean;
    required?: boolean;
    dependsOn?: string[];
    exclusive?: string[];
    env?: string;
    parse?: (input: TInput, context: any) => TFlag;
}
export interface IBooleanFlagConfig<TInput = string> extends IFlagConfig<boolean, TInput> {
    allowNo?: boolean;
    default?: Default<boolean>;
}
export interface IOptionsFlagConfig<TFlag, TInput> extends IFlagConfig<TFlag, TInput> {
    helpValue?: string;
    default?: Default<TFlag | undefined>;
    multiple?: boolean;
    input?: string[];
    options?: TInput[];
}
export interface IStringFlagConfig<TInput = string> extends IOptionsFlagConfig<string, TInput> {
}
export interface IIntegerFlagConfig<TInput = string> extends IOptionsFlagConfig<number, TInput> {
}
export interface IHelpFlagConfig<TInput = string> extends IBooleanFlagConfig<TInput> {
}
export declare function BooleanFlag(desc?: IBooleanFlagConfig): PropertyDecorator;
export declare function StringFlag(desc?: IBooleanFlagConfig): PropertyDecorator;
export declare function HelpFlag(desc?: IHelpFlagConfig): PropertyDecorator;
export declare function IntegerFlag(desc?: IIntegerFlagConfig): PropertyDecorator;
