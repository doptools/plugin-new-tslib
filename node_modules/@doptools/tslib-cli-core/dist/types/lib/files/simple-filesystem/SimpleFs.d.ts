/// <reference types="node" />
export declare class SimpleFs {
    private readonly enforceRootDir;
    private _cwd;
    constructor(enforceRootDir?: boolean);
    get root(): string;
    get cwd(): string;
    read(path: string): Promise<Buffer | null>;
    readText(path: string): Promise<string | null>;
    readJson<TData>(path: string): Promise<TData | null>;
    readYaml<TData>(path: string): Promise<TData | null>;
    create(path: string, data: string | Buffer): Promise<void>;
    createText(path: string, data: string): Promise<void>;
    createJson(path: string, data: any): Promise<void>;
    protected toJsonString(data: any): string;
    createYaml(path: string, data: any): Promise<void>;
    protected toYamlString(data: any): string;
    overwrite(path: string, data: string | Buffer): Promise<void>;
    overwriteText(path: string, data: string): Promise<void>;
    overwriteJson(path: string, data: any): Promise<void>;
    overwriteYaml(path: string, data: any): Promise<void>;
    delete(path: string): Promise<void>;
    rename(from: string, to: string): Promise<void>;
    exists(path: string): Promise<boolean>;
    private existsSync;
    list(path: string): Promise<string[]>;
    cd(path: string): void;
    protected buildPath(path: string): string;
    protected resolve(path: string): string;
    protected ensureExists(path: string): Promise<void>;
    private ensureExistsSync;
    protected ensureNotExists(path: string): Promise<void>;
    private ensureNotExistsSync;
}
