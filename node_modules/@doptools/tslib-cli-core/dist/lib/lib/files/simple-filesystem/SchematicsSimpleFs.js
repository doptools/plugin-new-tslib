"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchematicsSimpleFs = void 0;
const SimpleFs_1 = require("./SimpleFs");
class SchematicsSimpleFs extends SimpleFs_1.SimpleFs {
    constructor() {
        super(false);
        this.tree = null;
    }
    get root() {
        if (!this.tree) {
            return super.root;
        }
        return '/';
    }
    async read(path) {
        if (!this.tree) {
            return super.read(path);
        }
        return this.tree.read(this.resolve(path));
    }
    async create(path, data) {
        if (!this.tree) {
            return super.create(path, data);
        }
        this.tree.create(this.resolve(path), data);
    }
    async overwrite(path, data) {
        if (!this.tree) {
            return super.overwrite(path, data);
        }
        this.tree.overwrite(this.resolve(path), data);
    }
    async delete(path) {
        if (!this.tree) {
            return super.delete(path);
        }
        this.tree.delete(this.resolve(path));
    }
    async rename(from, to) {
        if (!this.tree) {
            return super.rename(from, to);
        }
        this.tree.rename(this.resolve(from), this.resolve(to));
    }
    exists(path) {
        if (!this.tree) {
            return super.exists(path);
        }
        return Promise.resolve(this.tree.exists(this.resolve(path)));
    }
    async list(path) {
        if (!this.tree) {
            return super.list(path);
        }
        const dir = this.tree.getDir(this.resolve(path));
        await this.ensureExists(dir.path);
        return [...dir.subdirs, ...dir.subfiles];
    }
}
exports.SchematicsSimpleFs = SchematicsSimpleFs;
//# sourceMappingURL=SchematicsSimpleFs.js.map