"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CommandBase = void 0;
const command_1 = require("@oclif/command");
const SimpleFs_1 = require("../files/simple-filesystem/SimpleFs");
const decorators_1 = require("./decorators");
class CommandBase extends command_1.Command {
    constructor() {
        super(...arguments);
        this.fs = new SimpleFs_1.SimpleFs(true);
        this.flags = {};
        this.arguments = {};
        this.verbose = false;
    }
    get packageJson() {
        return this.fs.readJson('/package.json');
    }
}
__decorate([
    decorators_1.BooleanFlag({
        description: ""
    }),
    __metadata("design:type", Boolean)
], CommandBase.prototype, "verbose", void 0);
exports.CommandBase = CommandBase;
//# sourceMappingURL=CommandBase.js.map