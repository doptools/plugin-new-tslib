"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const tslib_cli_core_1 = require("@doptools/tslib-cli-core");
const cli_ux_1 = tslib_1.__importDefault(require("cli-ux"));
const plugins_1 = require("../../util/plugins");
function getPluginType(cliPkg, plugin) {
    var _a;
    const pluginDef = (_a = cliPkg.oclif.plugins) === null || _a === void 0 ? void 0 : _a.find(p => typeof p === 'string' ? p === plugin.name : p.name === plugin.name);
    if (!pluginDef) {
        return plugin.name === '@doptools/cli' ? 'main' : 'unknown';
    }
    if (typeof pluginDef === 'string') {
        return 'core';
    }
    return pluginDef.type;
}
let PluginsListCommand = class PluginsListCommand extends tslib_cli_core_1.CommandBase {
    constructor() {
        super(...arguments);
        this.all = false;
    }
    async run() {
        const cliPkg = await plugins_1.readCliPackageJson();
        let plugins = this.config.plugins
            .map(plugin => ({
            name: plugin.name,
            type: getPluginType(cliPkg, plugin),
            valid: plugin.valid,
            version: plugin.version
        }));
        if (!this.all) {
            plugins = plugins.filter(_ => _.type !== 'main' && _.type !== 'core');
        }
        cli_ux_1.default.table(plugins, {
            name: {},
            type: { minWidth: 8 },
            version: {}
        });
    }
};
tslib_1.__decorate([
    tslib_cli_core_1.BooleanFlag(),
    tslib_1.__metadata("design:type", Boolean)
], PluginsListCommand.prototype, "all", void 0);
PluginsListCommand = tslib_1.__decorate([
    tslib_cli_core_1.CliCommand({})
], PluginsListCommand);
exports.default = PluginsListCommand;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9wbHVnaW5zL2xpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNkRBQWdGO0FBRWhGLDREQUF5QjtBQUN6QixnREFBd0Q7QUFHeEQsU0FBUyxhQUFhLENBQUMsTUFBa0IsRUFBRSxNQUFlOztJQUN0RCxNQUFNLFNBQVMsU0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sMENBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEgsSUFBSSxDQUFDLFNBQVMsRUFBRTtRQUNaLE9BQU8sTUFBTSxDQUFDLElBQUksS0FBSyxlQUFlLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0tBQy9EO0lBQ0QsSUFBSSxPQUFPLFNBQVMsS0FBSyxRQUFRLEVBQUU7UUFDL0IsT0FBTyxNQUFNLENBQUM7S0FDakI7SUFDRCxPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUM7QUFDMUIsQ0FBQztBQUdELElBQXFCLGtCQUFrQixHQUF2QyxNQUFxQixrQkFBbUIsU0FBUSw0QkFBVztJQUEzRDs7UUFHVyxRQUFHLEdBQWEsS0FBSyxDQUFDO0lBeUJqQyxDQUFDO0lBdkJHLEtBQUssQ0FBQyxHQUFHO1FBQ0wsTUFBTSxNQUFNLEdBQUcsTUFBTSw0QkFBa0IsRUFBZ0IsQ0FBQztRQUV4RCxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU87YUFDNUIsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUNaLElBQUksRUFBRSxNQUFNLENBQUMsSUFBSTtZQUNqQixJQUFJLEVBQUUsYUFBYSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUM7WUFDbkMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLO1lBQ25CLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTztTQUMxQixDQUFDLENBQUMsQ0FBQTtRQUVQLElBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFDO1lBQ1QsT0FBTyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxLQUFLLE1BQU0sSUFBSSxDQUFDLENBQUMsSUFBSSxLQUFLLE1BQU0sQ0FBQyxDQUFDO1NBQ3pFO1FBRUQsZ0JBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFO1lBQ2YsSUFBSSxFQUFFLEVBQUU7WUFDUixJQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFO1lBQ3JCLE9BQU8sRUFBRSxFQUFFO1NBQ2QsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztDQUdKLENBQUE7QUF6Qkc7SUFEQyw0QkFBVyxFQUFFOzsrQ0FDZTtBQUhaLGtCQUFrQjtJQUR0QywyQkFBVSxDQUFDLEVBQUUsQ0FBQztHQUNNLGtCQUFrQixDQTRCdEM7a0JBNUJvQixrQkFBa0IifQ==